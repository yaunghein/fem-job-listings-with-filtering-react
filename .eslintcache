[{"D:\\311's learning\\311-practice\\job-listing-with-multi-select { react }\\src\\index.js":"1","D:\\311's learning\\311-practice\\job-listing-with-multi-select { react }\\src\\App.js":"2","D:\\311's learning\\311-practice\\job-listing-with-multi-select { react }\\src\\GlobalStyles.js":"3","D:\\311's learning\\311-practice\\job-listing-with-multi-select { react }\\src\\components\\Context.js":"4","D:\\311's learning\\311-practice\\job-listing-with-multi-select { react }\\src\\components\\index.js":"5","D:\\311's learning\\311-practice\\job-listing-with-multi-select { react }\\src\\data\\jobsData.js":"6","D:\\311's learning\\311-practice\\job-listing-with-multi-select { react }\\src\\components\\JobCardList\\JobCardList.js":"7","D:\\311's learning\\311-practice\\job-listing-with-multi-select { react }\\src\\components\\FilterPill\\FilterPill.js":"8","D:\\311's learning\\311-practice\\job-listing-with-multi-select { react }\\src\\components\\FilterDropdown\\FilterDropdown.js":"9","D:\\311's learning\\311-practice\\job-listing-with-multi-select { react }\\src\\components\\DecoImage\\DecoImage.js":"10","D:\\311's learning\\311-practice\\job-listing-with-multi-select { react }\\src\\components\\FilterBox\\FilterBox.js":"11","D:\\311's learning\\311-practice\\job-listing-with-multi-select { react }\\src\\components\\Global-Containers.js":"12","D:\\311's learning\\311-practice\\job-listing-with-multi-select { react }\\src\\components\\FilterPill\\FilterPill-Styles.js":"13","D:\\311's learning\\311-practice\\job-listing-with-multi-select { react }\\src\\components\\DecoImage\\DecoImage-Styles.js":"14","D:\\311's learning\\311-practice\\job-listing-with-multi-select { react }\\src\\components\\FilterDropdown\\FilterDropdown-Styles.js":"15","D:\\311's learning\\311-practice\\job-listing-with-multi-select { react }\\src\\components\\FilterBox\\FilterBox-Styles.js":"16","D:\\311's learning\\311-practice\\job-listing-with-multi-select { react }\\src\\components\\JobCard\\JobCard.js":"17","D:\\311's learning\\311-practice\\job-listing-with-multi-select { react }\\src\\helpers\\index.js":"18","D:\\311's learning\\311-practice\\job-listing-with-multi-select { react }\\src\\components\\JobCard\\JobCard-Styles.js":"19","D:\\311's learning\\311-practice\\job-listing-with-multi-select { react }\\src\\components\\Theme\\Themes.js":"20","D:\\311's learning\\311-practice\\job-listing-with-multi-select { react }\\src\\components\\Theme\\useTheme.js":"21","D:\\311's learning\\311-practice\\job-listing-with-multi-select { react }\\src\\components\\Theme\\ThemeToggler.js":"22"},{"size":197,"mtime":1629798733061,"results":"23","hashOfConfig":"24"},{"size":680,"mtime":1630921279262,"results":"25","hashOfConfig":"24"},{"size":1265,"mtime":1630918779352,"results":"26","hashOfConfig":"24"},{"size":1747,"mtime":1630027892368,"results":"27","hashOfConfig":"24"},{"size":339,"mtime":1630026590856,"results":"28","hashOfConfig":"24"},{"size":3567,"mtime":1629965675918,"results":"29","hashOfConfig":"24"},{"size":511,"mtime":1630845711818,"results":"30","hashOfConfig":"24"},{"size":542,"mtime":1629950005132,"results":"31","hashOfConfig":"24"},{"size":879,"mtime":1630038721949,"results":"32","hashOfConfig":"24"},{"size":1112,"mtime":1630919330790,"results":"33","hashOfConfig":"24"},{"size":2666,"mtime":1630853467165,"results":"34","hashOfConfig":"24"},{"size":422,"mtime":1630918922502,"results":"35","hashOfConfig":"24"},{"size":1529,"mtime":1630853943520,"results":"36","hashOfConfig":"24"},{"size":409,"mtime":1630920997355,"results":"37","hashOfConfig":"24"},{"size":1624,"mtime":1630920795381,"results":"38","hashOfConfig":"24"},{"size":1889,"mtime":1630853585738,"results":"39","hashOfConfig":"24"},{"size":1625,"mtime":1630060126448,"results":"40","hashOfConfig":"24"},{"size":231,"mtime":1630029515940,"results":"41","hashOfConfig":"24"},{"size":4688,"mtime":1630853137278,"results":"42","hashOfConfig":"24"},{"size":461,"mtime":1630921125767,"results":"43","hashOfConfig":"24"},{"size":703,"mtime":1630924845840,"results":"44","hashOfConfig":"24"},{"size":1407,"mtime":1630921828088,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1cien9u",{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\311's learning\\311-practice\\job-listing-with-multi-select { react }\\src\\index.js",[],["93","94"],"D:\\311's learning\\311-practice\\job-listing-with-multi-select { react }\\src\\App.js",[],"D:\\311's learning\\311-practice\\job-listing-with-multi-select { react }\\src\\GlobalStyles.js",["95"],"D:\\311's learning\\311-practice\\job-listing-with-multi-select { react }\\src\\components\\Context.js",["96"],"import { useState, useEffect, createContext } from 'react';\r\nimport jobsData from '../data/jobsData';\r\n\r\nconst Context = createContext();\r\nconst ContextProvider = ({ children }) => {\r\n  const [allJobs, setAllJobs] = useState(jobsData.map(job => ({ ...job, show: true })));\r\n  const [filters, setFilters] = useState([]);\r\n\r\n  const removeFilter = filterObj => {\r\n    const updatedFilters = filters.filter(filter => filter.id !== filterObj.id);\r\n    setFilters(updatedFilters);\r\n  };\r\n\r\n  const addFilter = text => {\r\n    const isAlreadySelected = filters.some(filter => filter.text === text);\r\n    if (!isAlreadySelected) {\r\n      const newFilter = {\r\n        id: new Date().getTime(),\r\n        text,\r\n      };\r\n      setFilters(prevFilters => [...prevFilters, newFilter]);\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const clearAllFilters = () => {\r\n    setFilters([]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const filterTexts = filters.map(filter => filter.text);\r\n    const updatedJobs = allJobs.map(job => {\r\n      const textsToCompare = [\r\n        job.role,\r\n        job.level,\r\n        ...job.languages,\r\n        ...job.tools,\r\n        job.new && 'New',\r\n        job.featured && 'Featured',\r\n      ];\r\n\r\n      if (filterTexts.every(filterText => textsToCompare.includes(filterText))) {\r\n        return { ...job, show: true };\r\n      } else {\r\n        return { ...job, show: false };\r\n      }\r\n    });\r\n    setAllJobs(updatedJobs);\r\n  }, [filters]);\r\n\r\n  return (\r\n    <Context.Provider\r\n      value={{\r\n        allJobs,\r\n        setAllJobs,\r\n        filters,\r\n        setFilters,\r\n        removeFilter,\r\n        addFilter,\r\n        clearAllFilters,\r\n      }}>\r\n      {children}\r\n    </Context.Provider>\r\n  );\r\n};\r\n\r\nexport { ContextProvider, Context };\r\n","D:\\311's learning\\311-practice\\job-listing-with-multi-select { react }\\src\\components\\index.js",[],"D:\\311's learning\\311-practice\\job-listing-with-multi-select { react }\\src\\data\\jobsData.js",[],"D:\\311's learning\\311-practice\\job-listing-with-multi-select { react }\\src\\components\\JobCardList\\JobCardList.js",[],"D:\\311's learning\\311-practice\\job-listing-with-multi-select { react }\\src\\components\\FilterPill\\FilterPill.js",[],"D:\\311's learning\\311-practice\\job-listing-with-multi-select { react }\\src\\components\\FilterDropdown\\FilterDropdown.js",[],"D:\\311's learning\\311-practice\\job-listing-with-multi-select { react }\\src\\components\\DecoImage\\DecoImage.js",[],"D:\\311's learning\\311-practice\\job-listing-with-multi-select { react }\\src\\components\\FilterBox\\FilterBox.js",["97","98"],"import { useState, useEffect, useRef, useCallback } from 'react';\r\nimport { Wrapper, FilterPillsWrapper, FilterInput, ClearButton, Placeholder } from './FilterBox-Styles';\r\nimport { FilterPill, FilterDropdown } from '..';\r\nimport { useContext } from 'react';\r\nimport { Context } from '../Context';\r\nimport { pureDropdownTexts } from '../../helpers';\r\n\r\nconst FilterBox = () => {\r\n  const [value, setValue] = useState('');\r\n  const [dropdownTexts, setDropdownTexts] = useState([]);\r\n  const inputRef = useRef(null);\r\n  const { allJobs, filters, setFilters, clearAllFilters } = useContext(Context);\r\n  const addValueToFilter = useCallback(\r\n    e => {\r\n      if (e.key === 'Enter') {\r\n        if (value.length > 0 && dropdownTexts.includes(value)) {\r\n          setFilters(prevFilters => [...prevFilters, { id: new Date().getTime(), text: value }]);\r\n          setValue('');\r\n          inputRef.current.blur();\r\n        }\r\n      }\r\n    },\r\n    [setFilters, value]\r\n  );\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('keyup', addValueToFilter);\r\n    return () => document.removeEventListener('keyup', addValueToFilter);\r\n  }, [addValueToFilter]);\r\n\r\n  const dropdownTextsArr = allJobs.map(job => {\r\n    return [job.role, job.level, ...job.languages, ...job.tools, job.new && 'New', job.featured && 'Featured'];\r\n  });\r\n  const dropdownTextsReduceArr = dropdownTextsArr.reduce((accumulator, currentValue) => [\r\n    ...accumulator,\r\n    ...currentValue,\r\n  ]);\r\n  const cleanDropdownTexts = pureDropdownTexts(dropdownTextsReduceArr).sort();\r\n\r\n  useEffect(() => {\r\n    const updatedDropdownTexts = cleanDropdownTexts.filter(text => text.toLowerCase().includes(value.toLowerCase()));\r\n    setDropdownTexts(updatedDropdownTexts);\r\n  }, [value]);\r\n\r\n  return (\r\n    <Wrapper onClick={() => inputRef.current.focus()}>\r\n      <FilterPillsWrapper>\r\n        {filters.map(filter => (\r\n          <FilterPill key={filter.id} filter={filter} />\r\n        ))}\r\n      </FilterPillsWrapper>\r\n      {value.length === 0 && filters.length === 0 && <Placeholder>Search your dream job...</Placeholder>}\r\n      <FilterInput\r\n        type='text'\r\n        autoComplete='off'\r\n        size={value.length ? value.length : 1}\r\n        value={value}\r\n        onChange={e => setValue(e.target.value)}\r\n        ref={inputRef}\r\n      />\r\n      {value.length > 0 && <FilterDropdown value={value} setValue={setValue} dropdownTexts={dropdownTexts} />}\r\n\r\n      <ClearButton\r\n        onClick={() => {\r\n          clearAllFilters();\r\n          setValue('');\r\n          inputRef.current.blur();\r\n        }}>\r\n        Clear\r\n      </ClearButton>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default FilterBox;\r\n","D:\\311's learning\\311-practice\\job-listing-with-multi-select { react }\\src\\components\\Global-Containers.js",[],"D:\\311's learning\\311-practice\\job-listing-with-multi-select { react }\\src\\components\\FilterPill\\FilterPill-Styles.js",[],"D:\\311's learning\\311-practice\\job-listing-with-multi-select { react }\\src\\components\\DecoImage\\DecoImage-Styles.js",[],"D:\\311's learning\\311-practice\\job-listing-with-multi-select { react }\\src\\components\\FilterDropdown\\FilterDropdown-Styles.js",[],"D:\\311's learning\\311-practice\\job-listing-with-multi-select { react }\\src\\components\\FilterBox\\FilterBox-Styles.js",[],"D:\\311's learning\\311-practice\\job-listing-with-multi-select { react }\\src\\components\\JobCard\\JobCard.js",[],"D:\\311's learning\\311-practice\\job-listing-with-multi-select { react }\\src\\helpers\\index.js",[],"D:\\311's learning\\311-practice\\job-listing-with-multi-select { react }\\src\\components\\JobCard\\JobCard-Styles.js",[],"D:\\311's learning\\311-practice\\job-listing-with-multi-select { react }\\src\\components\\Theme\\Themes.js",[],"D:\\311's learning\\311-practice\\job-listing-with-multi-select { react }\\src\\components\\Theme\\useTheme.js",[],"D:\\311's learning\\311-practice\\job-listing-with-multi-select { react }\\src\\components\\Theme\\ThemeToggler.js",[],{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":1,"column":8,"nodeType":"105","messageId":"106","endLine":1,"endColumn":14},{"ruleId":"107","severity":1,"message":"108","line":49,"column":6,"nodeType":"109","endLine":49,"endColumn":15,"suggestions":"110"},{"ruleId":"107","severity":1,"message":"111","line":23,"column":5,"nodeType":"109","endLine":23,"endColumn":24,"suggestions":"112"},{"ruleId":"107","severity":1,"message":"113","line":43,"column":6,"nodeType":"109","endLine":43,"endColumn":13,"suggestions":"114"},"no-native-reassign",["115"],"no-negated-in-lhs",["116"],"no-unused-vars","'styled' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'allJobs'. Either include it or remove the dependency array.","ArrayExpression",["117"],"React Hook useCallback has a missing dependency: 'dropdownTexts'. Either include it or remove the dependency array.",["118"],"React Hook useEffect has a missing dependency: 'cleanDropdownTexts'. Either include it or remove the dependency array.",["119"],"no-global-assign","no-unsafe-negation",{"desc":"120","fix":"121"},{"desc":"122","fix":"123"},{"desc":"124","fix":"125"},"Update the dependencies array to be: [allJobs, filters]",{"range":"126","text":"127"},"Update the dependencies array to be: [dropdownTexts, setFilters, value]",{"range":"128","text":"129"},"Update the dependencies array to be: [cleanDropdownTexts, value]",{"range":"130","text":"131"},[1430,1439],"[allJobs, filters]",[941,960],"[dropdownTexts, setFilters, value]",[1736,1743],"[cleanDropdownTexts, value]"]